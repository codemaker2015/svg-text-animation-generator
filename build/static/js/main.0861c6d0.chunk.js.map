{"version":3,"sources":["pages/utils/index.js","pages/components/Snippets/CssSnippet.js","redux/actions.js","redux/default_state.js","redux/reducer.js","redux/store.js","pages/logic/setAnimation.js","pages/logic/svgGenerator.js","pages/logic/keyFramesGenerator.js","pages/components/Holders/SettingsHolder.js","pages/components/Holders/SvgHolder.js","pages/components/Extras/Git.js","pages/components/Extras/Bmc.js","pages/components/Extras/Header.js","pages/components/Holders/CodeHolder.js","pages/components/Snippets/JsSnippet.js","pages/components/Snippets/SvgSnippet.js","pages/components/Extras/Footer.js","pages/components/Extras/DownloadBundle.js","pages/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["format","html","result","indent","split","forEach","element","match","substring","length","download","filename","text","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","CssSnippet","css","useEffect","Prism","highlightAll","id","className","onClick","connect","state","output","setOutput","type","value","default_state","settings","fontFamily","fontVariant","size","unionCheckbox","separateCheckbox","bezierAccuracy","delay","duration","strokeWidth","fillColor","strokeColor","timingFunction","repeat","svg","js","meta","initialized","reducer","action","isNaN","store","createStore","Reducer","window","__REDUX_DEVTOOLS_EXTENSION__","setTextAnimation","paths","querySelectorAll","mode","i","path","getTotalLength","svgGenerator","getState","this","fontList","init","bind","loadFonts","then","_","dispatch","selectFamily","$","selectVariant","a","fetch","res","json","items","font","addOption","family","loadVariants","renderCurrent","parseFloat","fontIndex","selectedIndex","variantIndex","f","v","variants","url","files","opentype","load","err","textModel","makerjs","models","Text","layer","exporter","toSVG","jscode","toPrecision","signature","final_js","setAnimation","old_style","getElementById","remove","animation","keyFrames","innerHTML","getElementsByTagName","genKeyFrames","options","selector","querySelector","select","optionText","option","add","SettingsHolder","props","update","key","val","placeholder","onChange","e","target","href","rel","valueAsNumber","checked","SvgHolder","dangerouslySetInnerHTML","__html","Git","data-icon","data-size","data-show-count","aria-label","Bmc","src","alt","marginLeft","fontSize","Header","CodeHolder","children","JsSnippet","SvgSnippet","Footer","DownloadBundle","html_file","MainPage","App","Boolean","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"+PAAaA,EAAS,SAACC,GACnB,IACIC,EAAS,GACTC,EAAS,GAcb,OAZAF,EAAKG,MAAM,SAASC,SAAQ,SAAUC,GAC9BA,EAAQC,MAAM,WACdJ,EAASA,EAAOK,UANd,KAM4BC,SAGlCP,GAAUC,EAAS,IAAMG,EAAU,QAE/BA,EAAQC,MAAM,qBACdJ,GAZE,SAgBHD,EAAOM,UAAU,EAAGN,EAAOO,OAAS,IAIlCC,EAAS,SAACC,EAAUC,GAC7B,IAAIN,EAAUO,SAASC,cAAc,KACrCR,EAAQS,aAAa,OAAQ,iCAAmCC,mBAAmBJ,IACnFN,EAAQS,aAAa,WAAYJ,GAEjCL,EAAQW,MAAMC,QAAU,OACxBL,SAASM,KAAKC,YAAYd,GAE1BA,EAAQe,QAERR,SAASM,KAAKG,YAAYhB,IClB1BiB,EAAa,YAAc,IAAXC,EAAU,EAAVA,IAIlB,OAHAC,qBAAU,WACRC,IAAMC,iBACL,CAACH,IAEF,yBAAKI,GAAG,cACN,yBAAKC,UAAU,WACb,wBAAIA,UAAU,gBAAd,eACA,4BAAQA,UAAU,eAAeC,QAAS,WAAQpB,EAAS,qBAAsBc,KAAjF,iBAGF,6BACE,0BAAMK,UAAU,gBACbL,MAeID,EAFfA,EAAaQ,aANW,SAACC,GAEvB,MAAO,CAAER,IADCQ,EAAMC,OAAOT,OAKa,KAAzBO,CAA+BR,G,OCdrC,SAASW,EAAUC,EAAMC,GAC5B,MAAO,CAAED,KAAMA,EAAMC,MAAOA,G,WC1BnBC,EAAgB,CACzBC,SAAU,CACNC,WAAY,GACZC,YAAa,GACb5B,KAAM,iBACN6B,KAAM,IACNC,eAAe,EACfC,kBAAkB,EAClBC,eAAgB,GAChBC,MAAO,GACPC,SAAU,GACVC,YAAa,EACbC,UAAW,UACXC,YAAY,UACZC,eAAe,SACfC,QAAO,GAEXlB,OAAQ,CACJmB,IAAK,GACL5B,IAAK,GACL6B,GAAI,IAERC,KAAM,CACFC,aAAa,IC8ENC,MA9Ef,WAAiD,IAAhCxB,EAA+B,uDAAvBK,EAAeoB,EAAQ,wDACRzB,GAA9BM,EADsC,EACtCA,SAAUL,EAD4B,EAC5BA,OAAQqB,EADoB,EACpBA,KACpBlB,EAAQqB,EAAOrB,MAEnB,OAAQqB,EAAOtB,MACX,IF3BgB,WE8BZ,OAFAG,EAAS1B,KAAOwB,EACN,eAAKJ,EAAN,CAAaM,aAE1B,IF9Bc,kBEiCV,OAFAA,EAASC,WAAaH,EACZ,eAAKJ,EAAN,CAAaM,aAE1B,IFjCe,mBEoCX,OAFAA,EAASE,YAAcJ,EACb,eAAKJ,EAAN,CAAaM,aAE1B,IFpCO,WEuCH,OAFAA,EAASG,KAAT,OAAgBL,QAAhB,IAAgBA,IAAO,EACb,eAAKJ,EAAN,CAAaM,aAG1B,IFvCQ,YE0CJ,OAFAA,EAASO,MAAQa,MAAMtB,GAAO,GAAGA,EACvB,eAAKJ,EAAN,CAAaM,aAE1B,IF5CkB,sBE+Cd,OAFAA,EAASY,eAAiBd,EAChB,eAAKJ,EAAN,CAAaM,aAG1B,IF/CW,eEkDP,OAFAA,EAASQ,SAAWY,MAAMtB,GAAO,GAAGA,EAC1B,eAAKJ,EAAN,CAAaM,aAG1B,IFnDe,mBEsDX,OAFAA,EAASS,YAAcW,MAAMtB,GAAO,GAAGA,EAC7B,eAAKJ,EAAN,CAAaM,aAE1B,IFpDS,aEuDL,OAFAA,EAASa,OAASO,MAAMtB,GAAO,GAAGA,EACxB,eAAKJ,EAAN,CAAaM,aAG1B,IF3Da,iBE8DT,OAFAA,EAASU,UAAYZ,EACX,eAAKJ,EAAN,CAAaM,aAE1B,IF9De,mBEiEX,OAFAA,EAASW,YAAcb,EACb,eAAKJ,EAAN,CAAaM,aAI1B,IF/DM,UEiEF,OADAL,EAAOT,IAAMY,EACN,eAAKJ,EAAZ,CAAmBC,WAEvB,IFlEK,SEoED,OADAA,EAAOoB,GAAKjB,EACL,eAAKJ,EAAZ,CAAmBC,WAEvB,IFxEM,UE0EF,OADAA,EAAOmB,IAAMhB,EACN,eAAKJ,EAAZ,CAAmBC,WAEvB,IFvEc,kBEyEV,OADAqB,EAAKC,YAAcnB,EACZ,eAAKJ,EAAZ,CAAmBsB,SAEvB,QACI,OAAOtB,IChFJ2B,EANDC,YACZC,EACAxB,EACAyB,OAAOC,8BAAgCD,OAAOC,gCCyCzC,SAASC,EAAiBnB,EAAOC,EAAUC,EAAaG,EAAgBD,EAAYE,GAGvF,IAFA,IAAIc,EAAQpD,SAASqD,iBAAiB,QAClCC,EAAKhB,EAAO,WAAW,WAClBiB,EAAI,EAAGA,EAAIH,EAAMxD,OAAQ2D,IAAK,CACnC,IAAMC,EAAOJ,EAAMG,GACb3D,EAAS4D,EAAKC,iBACpBD,EAAKpD,MAAM,qBAAX,UAAqCR,EAArC,MACA4D,EAAKpD,MAAM,oBAAX,UAAoCR,EAApC,MACA4D,EAAKpD,MAAM,gBAAX,UAAgC8B,EAAhC,MACAsB,EAAKpD,MAAL,iBAA0BgC,GAC1BoB,EAAKpD,MAAL,oBAA6B6B,EAA7B,2BAAwDqB,EAAxD,YAAgEjB,GAChEmB,EAAKpD,MAAM,mBAAX,UAAmCmD,EAAIvB,EAAvC,M,sDCgBD,IAAM0B,EAAe,IAzE5B,WACI,IACMjC,EADMqB,EAAMa,WACZlC,SACNmC,KAAKlB,aAAc,EACnBkB,KAAKC,SAAW,GAChBD,KAAKE,KAAO,WACRF,KAAKG,OACLH,KAAKI,YAAYC,MAAK,SAAAC,GAClBpB,EAAMqB,SLeP,CAAE7C,KAXS,kBAWGC,OKf2B,QAGhDqC,KAAKG,KAAO,WACRH,KAAKQ,aAAeR,KAAKS,EAAE,gBAC3BT,KAAKU,cAAgBV,KAAKS,EAAE,kBAGhCT,KAAKI,UAAL,sBAAiB,mCAAAO,EAAA,4DACE,0CADF,SAEQC,MAAM,uDAAD,OADX,4CAC6EP,MAAK,SAAAQ,GAAG,OAAIA,EAAIC,UAF/F,cAETb,EAFS,OAGbD,KAAKC,SAAWA,EAChBD,KAAKC,SAASc,MAAMnF,SAChB,SAACoF,GACG,OAAO,EAAKC,UAAU,EAAKT,aAAcQ,EAAKE,WAGtDlB,KAAKmB,eATQ,kBAUN,GAVM,gDAYjBnB,KAAKoB,cAAgB,WACjB,IAAIpD,EAAOH,EAASG,KACfA,IACDA,EAAOqD,WAAWxD,EAASG,OAC1BA,IACDA,EAAO,KACX,IAAIsD,EAAYtB,KAAKQ,aAAae,cAAeC,EAAexB,KAAKU,cAAca,cAAepF,EAAO0B,EAAS1B,KAC9GsF,EAAIzB,KAAKC,SAASc,MAAMO,GACxBI,EAAID,EAAEE,SAASH,GACfI,EAAMH,EAAEI,MAAMH,GAAG3F,UAAU,GAC/B+F,IAASC,KAAKH,GAAK,SAACI,EAAKhB,GAErB,IAAIiB,EAAY,IAAIC,IAAQC,OAAOC,KAAKpB,EAAM7E,EAAM6B,GANwE,GAM3D,EANoG,IAQjK,IAAK,IAAI2B,KAAKsC,EAAUE,OACpBF,EAAUE,OAAOxC,GAAG0C,MAAQ1C,EAGpC,IAAIhB,EAAMuD,IAAQI,SAASC,MAAMN,GACjC/C,EAAMqB,SAAS9C,ELxCb,UKwCgCkB,IDhDvC,WAA6C,wDAAC,IAAD,EAE5C6D,EAAS,GAETA,EAAO,syBAJqC,MAwB7BtD,EAAMa,WAAnBlC,EAxB0C,EAwB1CA,SACAO,EAAqEP,EAArEO,MAAOC,EAA8DR,EAA9DQ,SAAUC,EAAoDT,EAApDS,YAAaG,EAAuCZ,EAAvCY,eAAgBD,EAAuBX,EAAvBW,YAAYE,EAAWb,EAAXa,OAC5Dc,EAAQpD,SAASqD,iBAAiB,QAEtCrB,EAAkB,KAAVA,GAA0B,OAAVA,EAAiB,GAAMA,EAC/CC,EAAwB,KAAbA,GAAgC,OAAbA,EAAoBmB,EAAMxD,OAASoC,EAAQ,EAAIC,EAC7EC,EAA8B,KAAhBA,GAAsC,OAAhBA,EAAuB,EAAIA,EAE/DG,EAAc,UAAGA,SAAH,QAAqB,SAOnCc,EAJAnB,EAAQiD,WAAWjD,EAAMqE,YAAY,IACrCpE,EAAWgD,WAAWhD,EAASoE,YAAY,IAC3CnE,EAAc+C,WAAW/C,EAAYmE,YAAY,IAEFhE,EAAgBD,EAAYE,GAE3E,IAAIgE,EAAU,oBAAD,OAAqBtE,EAArB,YAA8BC,EAA9B,YAA0CC,EAA1C,aAA0DG,EAA1D,cAA8ED,EAA9E,aAA8FE,EAA9F,MACTiE,EAAQ,UAAMH,EAAN,cAAkBE,GAC9BxD,EAAMqB,SAAS9C,EJjCN,SIiCwBkF,ICMzBC,GCnDgB,WAC1B,IAAMC,EAAYzG,SAAS0G,eAAe,uBACtCvE,EAAUW,EAAMa,WAAWlC,SAASU,UACpCsE,GACFA,EAAUE,SAEZ,IAAIvG,EAAQJ,SAASC,cAAc,SACnCG,EAAMkB,KAAO,WACblB,EAAMW,GAAK,sBAEX,IAAI6F,EAAS,8JAMGzE,EANH,0FAUGA,EAVH,0BAaT0E,EAAS,kFAETD,EAFS,iFAMTA,EANS,WAQbxG,EAAM0G,UAAYD,EAClB7G,SAAS+G,qBAAqB,QAAQ,GAAGxG,YAAYH,GACrD0C,EAAMqB,SAAS9C,ENtBH,UMsBsBwF,IDmBxBG,OAKRpD,KAAKmB,aAAe,WAAa,IAAD,OAC5BnB,KAAKU,cAAc2C,QAAQrH,OAAS,EAC5BgE,KAAKC,SAASc,MAAMf,KAAKQ,aAAae,eAC5CI,SAAS/F,SAAQ,SAAC8F,GAAQ,OAAO,EAAKT,UAAU,EAAKP,cAAegB,MACtE1B,KAAKoB,iBAETpB,KAAKS,EAAI,SAAU6C,GACf,OAAOlH,SAASmH,cAAcD,IAGlCtD,KAAKiB,UAAY,SAAUuC,EAAQC,GAC/B,IAAIC,EAAStH,SAASC,cAAc,UACpCqH,EAAOvH,KAAOsH,EACdC,EAAO/F,MAAQ8F,EACfD,EAAOH,QAAQM,IAAID,KEtDvBE,EAAiB,SAACC,GAAW,IAEvBtD,EAAasD,EAAbtD,SAGAzC,EAAmL+F,EAAnL/F,WAAYC,EAAuK8F,EAAvK9F,YAAa5B,EAA0J0H,EAA1J1H,KAAM6B,EAAoJ6F,EAApJ7F,KAAuDI,GAA6FyF,EAA9I5F,cAA8I4F,EAA/H3F,iBAA+H2F,EAA7G1F,eAA6G0F,EAA7FzF,OAAOC,EAAsFwF,EAAtFxF,SAAUC,EAA4EuF,EAA5EvF,YAAaC,EAA+DsF,EAA/DtF,UAAWE,EAAoDoF,EAApDpF,eAAgBD,EAAoCqF,EAApCrF,YAAYE,EAAwBmF,EAAxBnF,OAAQI,EAAgB+E,EAAhB/E,YAEzK9B,qBAAU,WACF8B,GACAgB,EAAasB,kBAElB,CAACjF,EAAM6B,EAAMI,EAAOC,EAAUC,EAAaC,EAAWR,EAAaU,EAAgBD,EAAYE,EAAQI,IAE1G9B,qBAAU,WAEF8B,GACAgB,EAAaqB,iBAElB,CAACrD,EAAYgB,IAKhB,IAAMgF,EAAS,SAACC,EAAKC,GACjBzD,EPvBG,CAAE7C,KOuBgBqG,EPvBJpG,MOuBSqG,KAG9B,OACI,yBAAK5G,UAAU,YACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,4BACX,2BACIA,UAAU,0BACVM,KAAK,OACLP,GAAG,aACHQ,MAAOxB,EACP8H,YAAY,kBACZC,SAAU,SAAAC,GAAC,OAAIL,EP1DnB,WO0DoCK,EAAEC,OAAOzG,YAMrD,yBAAKP,UAAU,iBACX,6BACI,yBAAKA,UAAU,eACX,wCAAa,0BAAMA,UAAU,cAAhB,oBAA8C,uBAAGA,UAAU,aAAaiH,KAAK,uCAAuCD,OAAO,SAASE,IAAI,uBAA1F,QAA9C,KAAb,KACA,4BACInH,GAAG,cACHQ,MAAOG,EACPoG,SAAU,SAAAC,GAAC,OAAIL,EPtEzB,kBOsEiDK,EAAEC,OAAOzG,WAIxD,yBAAKP,UAAU,eACX,2CACA,4BACID,GAAG,eACHQ,MAAOI,EACPmG,SAAU,SAAAC,GAAC,OAAIL,EP9ExB,mBO8EiDK,EAAEC,OAAOzG,YAK7D,6BACI,yBAAKP,UAAU,eACX,wCACA,2BACIM,KAAK,SACLP,GAAG,aACHQ,MAAOK,EACPiG,YAAa,IACbC,SAAU,SAAAC,GAAC,OAAIL,EP1FhC,WO0FiDK,EAAEC,OAAOzG,WAGjD,yBAAKP,UAAU,eACX,oDACA,2BACIM,KAAK,SACLP,GAAG,cACHQ,MAAOW,EACP2F,YAAa,MACbC,SAAU,SAAAC,GAAC,OAAIL,EPhGxB,mBOgGiDK,EAAEC,OAAOG,oBAI7D,6BACI,yBAAKnH,UAAU,eACX,4CACA,2BACIM,KAAK,SACLP,GAAG,cACH8G,YAAa,OACbtG,MAAOS,EACP8F,SAAU,SAAAC,GAAC,OAAIL,EP9G/B,YO8GiDK,EAAEC,OAAOG,mBAGlD,yBAAKnH,UAAU,eACX,yDACA,2BACIM,KAAK,SACLP,GAAG,iBACH8G,YAAY,OACZtG,MAAOU,EACP6F,SAAU,SAAAC,GAAC,OAAIL,EPvH5B,eOuHiDK,EAAEC,OAAOG,oBAIzD,6BACI,yBAAKnH,UAAU,eACX,mDACA,4BAAQD,GAAG,kBACPQ,MAAOc,EACPyF,SAAU,SAAAC,GAAC,OAAIL,EPlIrB,sBOkIiDK,EAAEC,OAAOzG,SAEpD,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,YAAd,cAGR,yBAAKP,UAAU,eACX,8CACA,2BACIM,KAAK,QACLP,GAAG,cACHQ,MAAOY,EACP2F,SAAU,SAAAC,GAAC,OAAIL,EP/I1B,iBO+IiDK,EAAEC,OAAOzG,YAI3D,6BACI,yBAAKP,UAAU,eACX,gDACA,2BACIM,KAAK,QACLP,GAAG,cACHQ,MAAOa,EACP0F,SAAU,SAAAC,GAAC,OAAIL,EPzJxB,mBOyJiDK,EAAEC,OAAOzG,WAGzD,yBAAKP,UAAU,gBACX,2BAAOA,UAAU,UAAjB,WACA,2BACIM,KAAK,WACLP,GAAG,iBACH8G,YAAY,OACZO,QAAS9F,EACTwF,SAAU,SAAAC,GAAC,OAAIL,EPlK9B,aOkKiDK,EAAEC,OAAOI,cAIvD,kCA+BLZ,EAFfA,EAAiBtG,aAPO,SAACC,GAAW,IAE1BM,EAAmBN,EAAnBM,SAAUgB,EAAStB,EAATsB,KAChB,OAAO,eAAKhB,EAAZ,GAAyBgB,KAIa,KAAzBvB,CAA+BsG,GCxM5Ca,EAAY,YAAc,IAAX9F,EAAU,EAAVA,IACf,OACI,yBAAKxB,GAAG,aAAauH,wBAAyB,CAACC,OAAOhG,MAU/C8F,EADfA,EAAYnH,aAJY,SAACC,GAErB,MAAO,CAAEoB,IADCpB,EAAMC,OAAOmB,OAGU,KAAzBrB,CAA+BmH,GCJ5BG,MAXf,WACI,OACI,yBAAKxH,UAAU,YACX,uBAAGA,UAAU,gBAAgBiH,KAAK,qEAAqEQ,YAAU,sBAAsBC,YAAU,QAAQC,kBAAgB,OAAOC,aAAW,6DAA3L,QACA,uBAAG5H,UAAU,gBAAgBiH,KAAK,gEAAgEQ,YAAU,eAAeC,YAAU,QAAQC,kBAAgB,OAAOC,aAAW,6DAA/K,QACA,uBAAG5H,UAAU,gBAAgBiH,KAAK,mCAAmCS,YAAU,QAAQC,kBAAgB,OAAOC,aAAW,mCAAzH,2BCSGC,EAfL,WAEN,OACI,uBAAG7H,UAAU,aAAagH,OAAO,SAASE,IAAI,sBAAsBD,KAAK,8CACrE,yBACIa,IAAI,4DACJC,IAAI,oBACR,0BACI3I,MAAO,CAAC4I,WAAW,MAAMC,SAAS,mBADtC,qBCUGC,EAfA,WACX,OACI,kBAAC,WAAD,KACI,6BACI,wBAAIlI,UAAU,SAAd,iCAEJ,yBAAKA,UAAU,UACX,kBAAC,EAAD,OAEJ,kBAAC,EAAD,QCDGmI,EATI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACjB,OACI,kBAAC,WAAD,KACA,yBAAKpI,UAAU,eACVoI,KCATC,EAAY,YAAa,IAAV7G,EAAS,EAATA,GAIf,OAHA5B,qBAAU,WACNC,IAAMC,iBACP,CAAC0B,IAEA,yBAAKzB,GAAG,aACJ,yBAAKC,UAAU,WACX,wBAAIA,UAAU,gBAAd,cACA,4BAAQA,UAAU,eAAeC,QAAS,WAAQpB,EAAS,oBAAqB2C,KAAhF,gBAEJ,6BACI,0BAAMxB,UAAU,eACXwB,MAgBN6G,EAFfA,EAAYnI,aANY,SAACC,GAErB,MAAO,CAAEqB,GADArB,EAAMC,OAAOoB,MAKW,KAAzBtB,CAA+BmI,GCxBvCC,EAAa,YAAc,IAAX/G,EAAU,EAAVA,IAIhB,OAHA3B,qBAAU,WACNC,IAAMC,iBACP,CAACyB,IAEA,yBAAKxB,GAAG,cACJ,yBAAKC,UAAU,WACX,wBAAIA,UAAU,gBAAd,eACA,4BAAQA,UAAU,eAAeC,QAAS,WAAQpB,EAAS,WAAYV,EAAOoD,MAA9E,iBAEJ,6BACI,0BAAMvB,UAAU,iBACX7B,EAAOoD,OAab+G,EADfA,EAAapI,aALW,SAACC,GAErB,MAAO,CAAEoB,IADCpB,EAAMC,OAAOmB,OAIW,KAAzBrB,CAA+BoI,GCtB7BC,MARf,WACI,OACI,kECDJC,EAAiB,SAAC/B,GAAW,IACrBlF,EAAsBkF,EAAtBlF,IAAK5B,EAAiB8G,EAAjB9G,IAAK6B,EAAYiF,EAAZjF,GAAIzC,EAAQ0H,EAAR1H,KAClB0J,EAAS,0QAMY1J,EANZ,sFAQSY,EART,sMAaS4B,EAbT,gHAiBKC,EAjBL,uEAqBb,OACI,yBAAKxB,UAAU,4BACX,4BAAQA,UAAU,eAAeC,QAAS,WAAQpB,EAAS,GAAD,OAAIE,EAAJ,mBAA2B0J,KAArF,qBAcGD,EADfA,EAAiBtI,aARO,SAACC,GAAW,IAC1BC,EAAoBD,EAApBC,OAAOK,EAAaN,EAAbM,SACb,OAAO,eACAL,EADP,CACcrB,KAAK0B,EAAS1B,SAKU,KAAzBmB,CAA+BsI,GC7BjC,SAASE,IAOpB,OANA9I,qBAAU,WACGZ,SAAS0G,eAAe,gBAE7BhD,EAAaI,SAEjB,IAEA,kBAAC,WAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,kBAAC,EAAD,OCZG6F,MAVf,WACE,OACE,kBAAC,IAAD,CAAU7G,MAAOA,GACf,yBAAK9B,UAAU,OACb,kBAAC0I,EAAD,SCAYE,QACW,cAA7B3G,OAAO4G,SAASC,UAEe,UAA7B7G,OAAO4G,SAASC,UAEhB7G,OAAO4G,SAASC,SAASpK,MACvB,2DCbNqK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjK,SAAS0G,eAAe,SD0HpB,kBAAmBwD,WACrBA,UAAUC,cAAcC,MACrBnG,MAAK,SAAAoG,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.0861c6d0.chunk.js","sourcesContent":["export const format = (html) => {\n    var tab = '\\t';\n    var result = '';\n    var indent = '';\n\n    html.split(/>\\s*</).forEach(function (element) {\n        if (element.match(/^\\/\\w/)) {\n            indent = indent.substring(tab.length);\n        }\n\n        result += indent + '<' + element + '>\\r\\n';\n\n        if (element.match(/^<?\\w[^>]*[^/]$/)) {\n            indent += tab;\n        }\n    });\n\n    return result.substring(1, result.length - 3);\n}\n\n\nexport const download=(filename, text)=> {\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n  \n    element.style.display = 'none';\n    document.body.appendChild(element);\n  \n    element.click();\n  \n    document.body.removeChild(element);\n  }","// import \"prismjs/themes/prism-coy.css\";\n// import \"prismjs/themes/prism-dark.css\";\n// import \"prismjs/themes/prism-funky.css\";\n// import \"prismjs/themes/prism-okaidia.css\";\n// import \"prismjs/themes/prism-solarizedlight.css\";\n// import \"prismjs/themes/prism-twilight.css\";\n// import \"prismjs/themes/prism.css\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport Prism from 'prismjs';\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { download } from './../../utils'\n\nlet CssSnippet = ({ css }) => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [css])\n  return (\n    <div id=\"output-css\">\n      <div className=\"context\">\n        <h2 className=\"code-heading\">CSS Snippet</h2>\n        <button className=\"download-btn\" onClick={() => { download('text-animation.css', css) }}>Download CSS</button>\n      </div>\n\n      <pre>\n        <code className=\"language-css\">\n          {css}\n        </code>\n      </pre>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  let css = state.output.css;\n  return { css }\n}\n\n\nCssSnippet = connect(mapStateToProps, null)(CssSnippet)\n\nexport default CssSnippet\n\n","// input\nexport const SET_TEXT = \"SET_TEXT\",\n    SET_FONT_FAMILY = \"SET_FONT_FAMILY\",\n    SET_FONT_VARIANT = \"SET_FONT_VARIANT\",\n    SET_SIZE = \"SET_SIZE\",\n    SET_TIMING_FUNCTION = \"SET_TIMING_FUNCTION\",\n    SET_DELAY = \"SET_DELAY\",\n    SET_DURATION = \"SET_DURATION\",\n    SET_STROKE_WIDTH = \"SET_STROKE_WIDTH\",\n    SET_FILL_COLOR = \"SET_FILL_COLOR\",\n    SET_STROKE_COLOR = \"SET_STROKE_COLOR\",\n    SET_REPEAT = \"SET_REPEAT\",\n\n    // output\n    SET_SVG = \"SET_SVG\",\n    SET_CSS = \"SET_CSS\",\n    SET_JS = \"SET_JS\",\n\n    // meta\n    SET_INITIALIZED = \"SET_INITIALIZED\"\n\nexport function setSettings(type, value) {\n    return { type: type, value: value, }\n}\n\nexport function setOutput(type, value) {\n    return { type: type, value: value, }\n}\n\nexport function setMeta(type, value) {\n    return { type: type, value: value, }\n}\n","export const default_state = {\n    settings: {\n        fontFamily: \"\",\n        fontVariant: \"\",\n        text: \"@codemaker2015\",\n        size: 150,\n        unionCheckbox: false,\n        separateCheckbox: true,\n        bezierAccuracy: '',\n        delay: 0.1,\n        duration: '',\n        strokeWidth: 2,\n        fillColor: '#f16f6b',\n        strokeColor:'#ffffff',\n        timingFunction:'linear',\n        repeat:true,\n    },\n    output: {\n        svg: '',\n        css: '',\n        js: '',\n    },\n    meta: {\n        initialized: false\n    }\n\n}","import {default_state} from './default_state'\nimport {\n    SET_TEXT,\n    SET_FONT_FAMILY,\n    SET_FONT_VARIANT,\n    SET_TIMING_FUNCTION,\n    SET_SIZE,\n    SET_DELAY,\n    SET_DURATION,\n    SET_STROKE_WIDTH,\n    SET_FILL_COLOR,\n    SET_STROKE_COLOR,\n    SET_REPEAT,\n    // output\n    SET_SVG,\n    SET_CSS,\n    SET_JS,\n    // meta\n    SET_INITIALIZED\n} from \"./actions\"\n\n\n\nfunction reducer(state = default_state, action) {\n    let { settings, output ,meta} = {...state};\n    let value = action.value;\n    var new_state=null\n    switch (action.type) {\n        case SET_TEXT:\n            settings.text = value\n            new_state={ ...state, settings }\n            return new_state\n        case SET_FONT_FAMILY:\n            settings.fontFamily = value\n            new_state={ ...state, settings }\n            return new_state\n        case SET_FONT_VARIANT:\n            settings.fontVariant = value\n            new_state={ ...state, settings }\n            return new_state\n        case SET_SIZE:\n            settings.size = value??0\n            new_state={ ...state, settings }\n            return new_state\n\n        case SET_DELAY:\n            settings.delay = isNaN(value)?'':value\n            new_state={ ...state, settings }\n            return new_state\n        case SET_TIMING_FUNCTION:\n            settings.timingFunction = value\n            new_state={ ...state, settings }\n            return new_state\n\n        case SET_DURATION:\n            settings.duration = isNaN(value)?'':value\n            new_state={ ...state, settings }\n            return new_state\n\n        case SET_STROKE_WIDTH:\n            settings.strokeWidth = isNaN(value)?'':value\n            new_state={ ...state, settings }\n            return new_state\n        case SET_REPEAT:\n            settings.repeat = isNaN(value)?'':value\n            new_state={ ...state, settings }\n            return new_state\n\n        case SET_FILL_COLOR:\n            settings.fillColor = value\n            new_state={ ...state, settings }\n            return new_state\n        case SET_STROKE_COLOR:\n            settings.strokeColor = value\n            new_state={ ...state, settings }\n            return new_state\n\n\n        case SET_CSS:\n            output.css = value\n            return { ...state, output }\n\n        case SET_JS:\n            output.js = value\n            return { ...state, output }\n\n        case SET_SVG:\n            output.svg = value\n            return { ...state, output }\n\n        case SET_INITIALIZED:\n            meta.initialized = value\n            return { ...state, meta }\n\n        default:\n            return state\n\n    }\n}\n\n\nexport default reducer\n","\nimport { createStore } from 'redux'\n\nimport Reducer from './reducer';\nimport { default_state } from './default_state'\n\n\n\n\nconst store = createStore(\n  Reducer,\n  default_state,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store;","import store from \"./../../redux/store\"\nimport { SET_JS, setOutput } from './../../redux/actions'\n\n\n\n\nexport function setAnimation(get_signature = false) {\n\n    let jscode = \"\"\n    if (process.env.NODE_ENV === \"production\") {\n        jscode=`function setTextAnimation(delay, duration, strokeWidth, timingFunction, strokeColor,repeat) {\n            let paths = document.querySelectorAll(\"path\");\n            let mode=repeat?'infinite':'forwards'\n            for (let i = 0; i < paths.length; i++) {\n                const path = paths[i];\n                const length = path.getTotalLength();\n                path.style[\"stroke-dashoffset\"] = \\`\\${length}px\\`;\n                path.style[\"stroke-dasharray\"] = \\`\\${length}px\\`;\n                path.style[\"stroke-width\"] = \\`\\${strokeWidth}px\\`;\n                path.style[\"stroke\"] = \\`\\${strokeColor}\\`;\n                path.style[\"animation\"] = \\`\\${duration}s svg-text-anim \\${mode} \\${timingFunction}\\`;\n                path.style[\"animation-delay\"] = \\`\\${i * delay}s\\`;\n            }\n        }`\n    }else{\n        let js_function = setTextAnimation\n        if (js_function) {\n            jscode = js_function.toString()\n        }\n    }\n    let { settings } = store.getState()\n    let { delay, duration, strokeWidth, timingFunction, strokeColor,repeat } = settings\n    let paths = document.querySelectorAll(\"path\");\n\n    delay = delay === '' || delay === null ? 0.1 : delay\n    duration = duration === '' || duration === null ? paths.length * delay + 2 : duration\n    strokeWidth = strokeWidth === '' || strokeWidth === null ? 2 : strokeWidth\n    // strokeWidth = strokeWidth ?? 2\n    timingFunction = timingFunction ?? \"linear\"\n\n    // limit decimal points\n    delay = parseFloat(delay.toPrecision(2))\n    duration = parseFloat(duration.toPrecision(2))\n    strokeWidth = parseFloat(strokeWidth.toPrecision(2))\n\n    setTextAnimation(delay, duration, strokeWidth, timingFunction, strokeColor,repeat);\n    // debugger\n    let signature=`setTextAnimation(${delay},${duration},${strokeWidth},'${timingFunction}','${strokeColor}',${repeat});`\n    let final_js = `${jscode}\\n ${signature}`\n    store.dispatch(setOutput(SET_JS, final_js))\n}\n\n\nexport function setTextAnimation(delay, duration, strokeWidth, timingFunction, strokeColor,repeat) {\n    let paths = document.querySelectorAll(\"path\");\n    let mode=repeat?'infinite':'forwards'\n    for (let i = 0; i < paths.length; i++) {\n        const path = paths[i];\n        const length = path.getTotalLength();\n        path.style[\"stroke-dashoffset\"] = `${length}px`;\n        path.style[\"stroke-dasharray\"] = `${length}px`;\n        path.style[\"stroke-width\"] = `${strokeWidth}px`;\n        path.style[\"stroke\"] = `${strokeColor}`;\n        path.style[\"animation\"] = `${duration}s svg-text-anim ${mode} ${timingFunction}`;\n        path.style[\"animation-delay\"] = `${i * delay}s`;\n    }\n}","import makerjs from \"makerjs\"\nimport opentype from \"opentype.js\"\nimport { setAnimation } from \"./setAnimation\"\nimport store from \"./../../redux/store\"\nimport { setOutput, SET_SVG, setMeta, SET_INITIALIZED } from \"./../../redux/actions\"\nimport { genKeyFrames } from \"./index\"\n\nfunction App() {\n    let state = store.getState();\n    let { settings} = state;\n    this.initialized = false;\n    this.fontList = {}\n    this.init = function () {\n        this.bind()\n        this.loadFonts().then(_ => {\n            store.dispatch(setMeta(SET_INITIALIZED, true))\n        })\n    }\n    this.bind = function () {\n        this.selectFamily = this.$('#font-select');\n        this.selectVariant = this.$('#font-variant');\n    };\n\n    this.loadFonts = async function () {\n        const apiKey = 'AIzaSyDedkw4Dr7wPMbTcUfTpXBLgyoncPygzDU';\n        let fontList = await fetch(`https://www.googleapis.com/webfonts/v1/webfonts?key=${apiKey}`).then(res => res.json())\n        this.fontList = fontList;\n        this.fontList.items.forEach(\n            (font) => {\n                return this.addOption(this.selectFamily, font.family);\n            }\n        );\n        this.loadVariants();\n        return 1\n    }\n    this.renderCurrent = function () {\n        var size = settings.size;\n        if (!size)\n            size = parseFloat(settings.size);\n        if (!size)\n            size = 100;\n        let fontIndex = this.selectFamily.selectedIndex, variantIndex = this.selectVariant.selectedIndex, text = settings.text, union = false, separate = true, bezierAccuracy = '';\n        var f = this.fontList.items[fontIndex];\n        var v = f.variants[variantIndex];\n        var url = f.files[v].substring(5); //remove http:\n        opentype.load(url, (err, font) => {\n            //generate the text using a font\n            var textModel = new makerjs.models.Text(font, text, size, union, false, bezierAccuracy);\n            if (separate) {\n                for (var i in textModel.models) {\n                    textModel.models[i].layer = i;\n                }\n            }\n            var svg = makerjs.exporter.toSVG(textModel);\n            store.dispatch(setOutput(SET_SVG, svg))\n            setAnimation();\n            genKeyFrames()\n        });\n    };\n\n    // loads variants after font-change\n    this.loadVariants = function () {\n        this.selectVariant.options.length = 0;\n        var f = this.fontList.items[this.selectFamily.selectedIndex];\n        f.variants.forEach((v) => { return this.addOption(this.selectVariant, v); });\n        this.renderCurrent();\n    };\n    this.$ = function (selector) {\n        return document.querySelector(selector);\n    };\n\n    this.addOption = function (select, optionText) {\n        var option = document.createElement('option');\n        option.text = optionText;\n        option.value = optionText;\n        select.options.add(option);\n    };\n\n}\n\nexport const svgGenerator = new App();\n","import store from \"./../../redux/store\"\nimport { setOutput, SET_CSS } from \"./../../redux/actions\"\n\n\nexport const genKeyFrames = () => {\n  const old_style = document.getElementById('animation-keyframes')\n  let fillColor=store.getState().settings.fillColor\n  if (old_style) {\n    old_style.remove()\n  }\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  style.id = 'animation-keyframes';\n\n  let animation = `   40% {\n          stroke-dashoffset: 0;\n          fill: transparent;\n        }\n        60% {\n          stroke-dashoffset: 0;\n          fill: ${fillColor};\n        }\n        100% {\n          stroke-dashoffset: 0;\n          fill: ${fillColor};\n        }\n        `\n  var keyFrames = `     /* Google chrome */\n      @-webkit-keyframes svg-text-anim {\n    ${animation}\n    }\n    /* Most browsers */\n    @keyframes svg-text-anim {\n    ${animation}\n    }`;\n  style.innerHTML = keyFrames;\n  document.getElementsByTagName('head')[0].appendChild(style);\n  store.dispatch(setOutput(SET_CSS, keyFrames))\n\n}\n","import React, { useEffect } from 'react'\n\nimport { connect } from 'react-redux'\nimport {\n    SET_TEXT,\n    SET_SIZE,\n    SET_DELAY,\n    SET_DURATION,\n    SET_STROKE_WIDTH,\n    setSettings,\n    SET_FILL_COLOR,\n    SET_FONT_FAMILY,\n    SET_FONT_VARIANT,\n    SET_TIMING_FUNCTION,\n    SET_STROKE_COLOR,\n    SET_REPEAT,\n} from './../../../redux/actions'\n\n\nimport { svgGenerator } from './../../logic/'\n\nlet SettingsHolder = (props) => {\n\n    let { dispatch } = props\n\n    // eslint-disable-next-line no-unused-vars\n    let { fontFamily, fontVariant, text, size, unionCheckbox, separateCheckbox, bezierAccuracy, delay, duration, strokeWidth, fillColor, timingFunction, strokeColor,repeat, initialized } = props\n\n    useEffect(() => {\n        if (initialized) {\n            svgGenerator.renderCurrent()\n        }\n    }, [text, size, delay, duration, strokeWidth, fillColor, fontVariant, timingFunction, strokeColor,repeat, initialized])\n\n    useEffect(() => {\n\n        if (initialized) {\n            svgGenerator.loadVariants()\n        }\n    }, [fontFamily, initialized])\n\n\n\n\n    const update = (key, val) => {\n        dispatch(setSettings(key, val))\n    }\n\n    return (\n        <div className=\"settings\">\n            <div className=\"settings-wrapper\">\n                <div className=\"text-holder\">\n                    <div className=\"input-group text-center \">\n                        <input\n                            className=\"input-text text-center \"\n                            type=\"text\"\n                            id=\"input-text\"\n                            value={text}\n                            placeholder=\"Input Text Here\"\n                            onChange={e => update(SET_TEXT, e.target.value)}\n                        />\n\n                    </div>\n                </div>\n\n                <div className=\"tuners-holder\">\n                    <div>\n                        <div className=\"input-group\">\n                            <label>Font: <span className=\"fonts-info\">(Check all fonts <a className=\"fonts-link\" href=\"https://fonts.google.com/?sort=alpha\" target=\"_blank\" rel=\"noopener noreferrer\" >here</a>)</span> </label>\n                            <select\n                                id=\"font-select\"\n                                value={fontFamily}\n                                onChange={e => update(SET_FONT_FAMILY, e.target.value)}\n                            >\n                            </select>\n                        </div>\n                        <div className=\"input-group\">\n                            <label>Variant:</label>\n                            <select\n                                id=\"font-variant\"\n                                value={fontVariant}\n                                onChange={e => update(SET_FONT_VARIANT, e.target.value)}\n                            >\n                            </select>\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"input-group\">\n                            <label>Size:</label>\n                            <input\n                                type=\"number\"\n                                id=\"input-size\"\n                                value={size}\n                                placeholder={100}\n                                onChange={e => update(SET_SIZE, e.target.value)}\n                            />\n                        </div>\n                        <div className=\"input-group\">\n                            <label>Stroke Width(px):</label>\n                            <input\n                                type=\"number\"\n                                id=\"input-width\"\n                                value={strokeWidth}\n                                placeholder={2 + 'px'}\n                                onChange={e => update(SET_STROKE_WIDTH, e.target.valueAsNumber)}\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"input-group\">\n                            <label>Delay(s):</label>\n                            <input\n                                type=\"number\"\n                                id=\"input-delay\"\n                                placeholder={0.1 + 's'}\n                                value={delay}\n                                onChange={e => update(SET_DELAY, e.target.valueAsNumber)}\n                            />\n                        </div>\n                        <div className=\"input-group\">\n                            <label>Animation duration(s):</label>\n                            <input\n                                type=\"number\"\n                                id=\"input-duration\"\n                                placeholder=\"auto\"\n                                value={duration}\n                                onChange={e => update(SET_DURATION, e.target.valueAsNumber)}\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"input-group\">\n                            <label>Timing Function:</label>\n                            <select id=\"timing-function\"\n                                value={timingFunction}\n                                onChange={e => update(SET_TIMING_FUNCTION, e.target.value)}\n                            >\n                                <option value='ease'>ease</option>\n                                <option value='ease-in'>ease-in</option>\n                                <option value='ease-out'>ease-out</option>\n                                <option value='ease-in-out'>ease-in-out</option>\n                                <option value='linear'>linear</option>\n                                <option value='step-start'>step-start</option>\n                                <option value='step-end'>step-end</option>\n                            </select>\n                        </div>\n                        <div className=\"input-group\">\n                            <label>Fill Color:</label>\n                            <input\n                                type=\"color\"\n                                id=\"input-color\"\n                                value={fillColor}\n                                onChange={e => update(SET_FILL_COLOR, e.target.value)}\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"input-group\">\n                            <label>Stroke Color:</label>\n                            <input\n                                type=\"color\"\n                                id=\"input-color\"\n                                value={strokeColor}\n                                onChange={e => update(SET_STROKE_COLOR, e.target.value)}\n                            />\n                        </div>\n                        <div className=\"input-group \">\n                            <label className=\"inline\">Repeat:</label>\n                            <input\n                                type=\"checkbox\"\n                                id=\"input-duration\"\n                                placeholder=\"auto\"\n                                checked={repeat}\n                                onChange={e => update(SET_REPEAT, e.target.checked)}\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        {/* <label</label>\n                                className=\"hidden\">Separate characters:\n                            <input\n                                    type=\"checkbox\" checked\n                                    id=\"input-separate\"\n                                />\n                            \n                            <label</label>\n                                className=\"hidden\">Union:\n                            <input\n                                    type=\"checkbox\"\n                                    id=\"input-union\"\n                                />\n                            */}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n\n    let { settings, meta } = state\n    return { ...settings, ...meta }\n}\n\n\nSettingsHolder = connect(mapStateToProps, null)(SettingsHolder)\n// SettingsHolder = connect(null, null)(SettingsHolder)\nexport default SettingsHolder\n","import React from 'react'\n\n\nimport { connect } from 'react-redux';\n\n\nlet SvgHolder = ({ svg }) => {\n    return (\n        <div id=\"svg-holder\" dangerouslySetInnerHTML={{__html:svg}} >\n            \n        </div>\n    )\n}\nconst mapStateToProps = (state) => {\n    let svg = state.output.svg\n    return { svg }\n}\nSvgHolder = connect(mapStateToProps, null)(SvgHolder)\nexport default SvgHolder\n","import React from 'react'\n\nfunction Git() {\n    return (\n        <div className=\"gitIcons\">\n            <a className=\"github-button\" href=\"https://github.com/codemaker2015/svg-text-animation-generator/fork\" data-icon=\"octicon-repo-forked\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Fork codemaker2015/svg-text-animation-generator on GitHub\">Fork</a>\n            <a className=\"github-button\" href=\"https://github.com/codemaker2015/svg-text-animation-generator\" data-icon=\"octicon-star\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Star codemaker2015/svg-text-animation-generator on GitHub\">Star</a>\n            <a className=\"github-button\" href=\"https://github.com/codemaker2015\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Follow @codemaker2015 on GitHub\">Follow @codemaker2015</a>\n        </div>\n    )\n}\n\n\nexport default Git\n\n","import React from 'react'\nlet Bmc = () => {\n\n    return (\n        <a className=\"bmc-button\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.buymeacoffee.com/codemaker2015\">\n            <img\n                src=\"https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg\"\n                alt=\"Buy me a coffee\" />\n            <span\n                style={{marginLeft:'5px',fontSize:'28px!important'}}>\n                Buy me a coffee\n                </span>\n        </a>\n    )\n}\n\nexport default Bmc;","import React, { Fragment } from 'react'\nimport Git from './Git'\nimport Bmc from './Bmc'\nconst Header = () => {\n    return (\n        <Fragment>\n            <div>\n                <h1 className=\"title\">SVG Text Animation Generator</h1>\n            </div>\n            <div className=\"extras\">\n                <Git />\n            </div>\n            <Bmc />\n        </Fragment>\n\n    )\n}\n\nexport default Header\n","import React, { Fragment } from 'react'\n\nconst CodeHolder = ({children}) => {\n    return (\n        <Fragment>\n        <div className=\"code-holder\">\n            {children}\n        </div>\n        </Fragment>\n    )\n}\nexport default CodeHolder\n","import React, { useEffect } from 'react'\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport Prism from 'prismjs';\nimport { connect } from 'react-redux'\nimport { download } from './../../utils'\n\nlet JsSnippet = ({ js }) => {\n    useEffect(() => {\n        Prism.highlightAll()\n    }, [js])\n    return (\n        <div id=\"output-js\">\n            <div className=\"context\">\n                <h2 className=\"code-heading\">JS Snippet</h2>\n                <button className=\"download-btn\" onClick={() => { download('text-animation.js', js) }}>Download JS</button>\n            </div>\n            <pre>\n                <code className=\"language-js\">\n                    {js}\n                </code>\n            </pre>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n    let js = state.output.js;\n    return { js }\n}\n\n\nJsSnippet = connect(mapStateToProps, null)(JsSnippet)\n\nexport default JsSnippet\n\n","import React, { useEffect } from 'react'\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport Prism from 'prismjs';\nimport { connect } from 'react-redux';\nimport { format, download } from './../../utils'\n\n\n\nlet SvgSnippet = ({ svg }) => {\n    useEffect(() => {\n        Prism.highlightAll()\n    }, [svg])\n    return (\n        <div id=\"output-svg\">\n            <div className=\"context\">\n                <h2 className=\"code-heading\">SVG Snippet</h2>\n                <button className=\"download-btn\" onClick={() => { download('text.svg', format(svg)) }}>Download SVG</button>\n            </div>\n            <pre>\n                <code className=\"language-html\">\n                    {format(svg)}\n                </code>\n            </pre>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    let svg = state.output.svg\n    return { svg }\n}\n\nSvgSnippet = connect(mapStateToProps, null)(SvgSnippet)\nexport default SvgSnippet;\n\n\n\n","import React from 'react'\n\nfunction Footer() {\n    return (\n        <footer>\n            Copyright @ 2022 Vishnu Sivan\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { download } from './../../utils'\nlet DownloadBundle = (props) => {\n    const { svg, css, js ,text} = props\n    let html_file = `\n                <!DOCTYPE html>\n                <html lang=\"en\">\n                <head>\n                    <meta charset=\"UTF-8\">\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n                    <title>${text} | Animation</title>\n                    <style>\n                        ${css}\n                    </style>\n                </head>\n                <body style='background:mediumseagreen'>\n                    <div class=\"svg-holder\">\n                        ${svg}\n                    </div>\n                </body>\n                <script>\n                    ${js}\n                </script>\n                </html>\n            `\n    return (\n        <div className=\"context text-center my-1\">\n            <button className=\"download-btn\" onClick={() => { download(`${text}-animation.html`, html_file) }}>Download Source</button>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    let { output,settings } = state\n    return {\n        ...output,text:settings.text\n    }\n}\n\n\nDownloadBundle = connect(mapStateToProps, null)(DownloadBundle)\nexport default DownloadBundle","import React, { Fragment,useEffect } from 'react'\nimport CssSnippet from './components/Snippets/CssSnippet'\nimport SettingsHolder from './components/Holders/SettingsHolder'\nimport SvgHolder from './components/Holders/SvgHolder'\nimport Header from './components/Extras/Header'\nimport CodeHolder from './components/Holders/CodeHolder'\nimport JsSnippet from './components/Snippets/JsSnippet'\nimport SvgSnippet from './components/Snippets/SvgSnippet'\nimport {svgGenerator} from \"./logic\"\nimport Footer from './components/Extras/Footer'\nimport DownloadBundle from './components/Extras/DownloadBundle'\n\nexport default function MainPage() {\n    useEffect(() => {\n        let test=document.getElementById('font-select')\n        if(test){\n            svgGenerator.init()\n        }\n      },[]);\n    return (\n        <Fragment>\n            <Header/>\n            <SettingsHolder/>\n            <DownloadBundle/>\n            <SvgHolder/>\n            <CodeHolder>\n                <SvgSnippet/>\n                <CssSnippet/>\n                <JsSnippet/>\n            </CodeHolder>\n            <Footer/>\n        </Fragment>\n    )\n}\n","import React from 'react';\nimport './styles/main.scss';\nimport MainPage from './pages/MainPage';\n\nimport { Provider } from 'react-redux'\nimport store from \"./redux/store\"\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <MainPage />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}